#!/usr/bin/env python3

import argparse
from pipeline.run_preservelast_pipeline import run_preservelast_pipeline
from filereadwrite.create_backup import create_backup
from date_helper.date_helper import update_dates_in_data
from yaml_toplevel.yaml_toplevel import get_toplevel_inserts_keys, determine_key_contents
from yaml_list_helpers.yaml_list_helpers import get_last_list_index_for_key, get_list_item_key_values
from yaml_dict_helpers.yaml_dict_helpers import get_dict_item_key_values
from filereadwrite.file_indicies import find_yaml_block_indices_for_all, find_yaml_block_indices_for_combined
from filereadwrite.string_write import replace_combined_updated_blocks

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="YAML update tool")
    parser.add_argument('subcommand', choices=['put'],
                        help="Subcommand: 'put' (currently the only supported action)")
    parser.add_argument('manifest_file',
                        help="Path to the target manifest YAML file (e.g. repo/manifest-01/manifest.yaml)")
    parser.add_argument('--replacements_dir',
                        help="Directory containing updates (not used in this minimal example)")
    args = parser.parse_args()

    if not args.manifest_file:
        print("Error: manifest_file must be provided")
        exit(1)

    if not args.replacements_dir:
        print("Error: --replacements_dir must be provided")
        exit(1)

    backup_file = create_backup(args.manifest_file)

    run_preservelast_pipeline(args.replacements_dir, args.manifest_file)
